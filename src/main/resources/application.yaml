spring:
  application:
    name: user-settings-service-api
  mvc:
    throw-exception-if-no-handler-found: true
  zipkin:
    baseUrl: http://zipkin.istio-system.svc:9411
    sender:
      type: web
  sleuth:
    opentracing:
      enabled: true
    baggage:
      correlation-enabled: true
      remote-fields: x-request-id, x-access-token
      correlation-fields: x-request-id
  web:
    resources:
      add-mappings: false

springdoc:
  swagger-ui:
    path: /openapi

openapi:
  request:
    headers:
      - X-Access-Token
  response:
    codes:
      get-by-id: 200, 401, 403, 500, 501
      put: 200, 400, 401, 403, 422, 500, 501

management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: "*"
    jmx:
      exposure:
        exclude: "*"
  endpoint:
    health:
      enabled: true
      show-details: always
      group:
        liveness:
          include: livenessState, livenessResponseCheck
        readiness:
          include: readinessState, kafka
    loggers:
      enabled: true
    prometheus:
      enabled: true
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true

probes:
  liveness:
    failureThreshold: 10

platform:
  security:
    enabled: true
    whitelist:
      - /openapi
      - /v3/api-docs/**
      - /swagger-ui/**
      - /actuator/**

logbook:
  exclude:
    - /openapi
    - /v3/api-docs/**
    - /swagger-ui/**
    - /actuator/**

data-platform:
  kafka:
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: user-settings-service-api
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      trusted-packages:
        - com.epam.digital.data.platform.model.core.kafka
        - com.epam.digital.data.platform.settings.model.dto
    request-reply:
      enabled: true
      timeout-in-seconds: 30
      topics:
        read-settings:
          request: read-settings-inbound
          reply: read-settings-outbound
        update-settings:
          request: update-settings-inbound
          reply: update-settings-outbound
    topic-properties:
      creation:
        enabled: true
        timeout-in-seconds: 60
      retention:
        default-in-days: 7
    error-handler:
      initial-interval: 1500
      max-elapsed-time: 6000
      multiplier: 2
